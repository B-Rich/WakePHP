#!/usr/bin/php -q
<?php
chdir(__DIR__.'/..');
$mongo = new Mongo();
$db = $mongo->xE;

$name = 'test';
$pidfile = '/var/run/phpd.pid';
$mastersocket = '/tmp/phpDaemon-master-%x.sock';
$theme = 'simple';

class WakePHP {
	public $name;
	public function __construct($path,$name) {
		$this->name = $name;
		$this->sock = stream_socket_client($path, $errno, $errstr);
		if (!$this->sock) {
			$e = new CouldntConnect;
			$e->path = $path;
			throw $e;
		}
	}
	public function sendPacket($p) {
		fwrite($this->sock,json_encode($p)."\n");
	}
	//public function saveBlock($block) {file_put_contents('./PackagedThemes/simple/blocks/'.$block['name'],json_encode($block));}
	public function __call($m,$a) {
		$this->sendPacket(array(
					'op' => 'singleCall',
					'appfullname' => get_class($this).'-'.$this->name,
					'method' => $m,
					'args' => $a
		));
	}
}
class CouldntConnect extends Exception {}


try {
	$app = new WakePHP('unix://'.sprintf($mastersocket, crc32($pidfile)),$name);
}
catch (CouldntConnect $e) {
	exit('Connection failed to '.$e->path.'.');
}

/* sessions */ 
$sessions = $db->selectCollection('sessions');
$sessions->remove();
$sessions->ensureIndex(array('accountId' => 1));

/* accounts */ 
$accounts = $db->selectCollection('accounts');
$accounts->remove();
$accounts->ensureIndex(array('username' => 1),array('unique' => true));
$accounts->ensureIndex(array('email' => 1),array('unique' => true));
$app->saveAccount(array(
				'username' => 'Guest',
				'aclgroups' => array('Guests'),
				'acl' => array(),
));
$app->saveAccount(array(
				'username' => 'admin',
				'password' => 'passphrase',
				'email' => 'admin@admin.tld',
				'aclgroups' => array('Superusers'),
				'acl' => array(),
));

/* aclgroups */ 
$aclgroups = $db->selectCollection('aclgroups');
$aclgroups->remove();
$aclgroups->ensureIndex(array('name' => 1),array('unique' => true));
$app->saveACLgroup(array(
				'name' => 'Superusers',
				'acl' => array('global' => array('all','grant')),
));

/* blocks */ 
$blocks = $db->selectCollection('blocks');
$blocks->remove();
$blocks->ensureIndex(array('name' => 1));
$blocks->ensureIndex(array('locale' => 1, 'path' => 1));

foreach (glob('./PackagedThemes/'.$theme.'/blocks/*') as $file) {
	$app->saveBlock(json_decode(file_get_contents($file),true));
}

shell_exec(dirname(__FILE__).'/BuildLocales');

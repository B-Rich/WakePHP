#!/usr/bin/php -q
<?php
include 'generic.php';
foreach (glob('./jobs/*.job.php') as $f) {
	include $f;
}
$pid = pcntl_fork();
if ($pid == -1) {
     die('could not fork');
} else if ($pid) {
     exit;
} else {
		$sid = posix_setsid();
		if ($sid < 0) {
			exit('setsid() failed');
		}
}
if (is_callable('setproctitle')) {
	setproctitle('JobWorkerDaemon');
}
echo "Forked.\n";
$jobqueue = $db->selectCollection('jobqueue');
$jobresults = $db->selectCollection('jobresults');
while (true) {
	$job = $jobqueue->findOne(array('status' => 'vacant'));
	if (!$job) {
		sleep(1);
		continue;
	}
	try {
		$jobqueue-->update(array('_id' => $job['_id'], 'status' => 'vacant'), array('$set' => array('status' => 'acquired')), array('safe' => true));
	} catch (MongoCursorException $e) {
		echo "Caught exception trying to acquire ".$job['_id'].": ".$e->getMessage()."\n";
		continue;
	}
	echo "Sending ".$job['_id']." ... ";
	$result = call_user_func_array($job['jobtype'], $job['args']);
	echo ($result ? 'OK' : 'FAILED') . "\n";
	try {
		$status = $result === false? 'succeed' : 'failed';
		$jobqueue->update(array('_id' => $job['_id']), array('$set' => array('status' => $status, array('safe' => true))));
		$jobresults->insert(array('_id' => $job['_id'], 'instance' => $job['instance'], 'status' => $status, 'result' => $result));
	} catch (MongoCursorException $e) {
		echo "Caught exception trying to set status of ".$job['_id']."\n";
	}
}
